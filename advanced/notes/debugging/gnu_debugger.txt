Overview

- Allows you to see what is `inside` the program while it executes 

- gdb is a powerful interactive debugger that is frequently used to debug programs compiled with GNU's gcc compiler 

- GDB can do four main kinds of things to help you catch bugs in the act 
    - start your program, specifying anything that might affect its behavior 
    - make your program stop at a predetermined location
    - examine what has happened, when your program has stopped (display variables)
    - change things in your program (set variables)
        - so you can experiment with correcting the effects of one bug and go on to learn about another 
    - you can trace your program stepping into functions 

- programs that you use gdb on may be executing on the same machine as GDB (native), on another machine (remote), or on a simulator 

- GDB can run on most popular UNIX and Microsoft Windows variants, as well as on Mac OS X

- your C program must be compiled with the gcc compiler using the -g option to make full use of GDB's features 
    - causes the C compiler to add extra information to the output file 
        - variable and structure types, source filenames, and C statement to machine code mappings

